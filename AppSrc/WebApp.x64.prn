Compiling Program: E:\repositories\JenkinsDemo\AppSrc\WebApp.src
Memory Available: 8855822336
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.x64.pkd    (C:\Appl\DataFlex 20.0\Pkg\AllWebAppClasses.x64.pkd)
32444>Use cConnection.pkg
32444>
32444>Object oApplication is a cApplication
32446>    Object oConnection is a cConnection
32448>        Use LoginEncryption.pkg
Including file: LoginEncryption.pkg    (C:\Appl\DataFlex 20.0\Pkg\LoginEncryption.pkg)
32448>>>Use cLoginEncryption.pkg
Including file: cLoginEncryption.pkg    (C:\Appl\DataFlex 20.0\Pkg\cLoginEncryption.pkg)
32448>>>>>Use cCryptographerEx.pkg
32448>>>>>
32448>>>>>Class cLoginEncryption is a cObject
32449>>>>>    
32449>>>>>    Procedure Construct_Object
32451>>>>>        Forward Send Construct_Object
32453>>>>>        // this must be set to a multi (40ish) character random key
32453>>>>>        Property String psEncryptPassword ""
32454>>>>>        
32454>>>>>        Object oDataCrypter is a cCryptographerEx
32456>>>>>            Set piHash to CALG_SHA_256
32457>>>>>            Set piCipher to CALG_AES_256
32458>>>>>            Set psProvider to "" //  Not providing a specific provider gives the default provider for the provider type
32459>>>>>            Set piProvider to PROV_RSA_AES
32460>>>>>        End_Object
32461>>>>>    End_Procedure
32462>>>>>    
32462>>>>>    // This can be augmented to return a password encryption key using any
32462>>>>>    // hidden mechanism desired.
32462>>>>>    Function GetEncryptionPassword Returns String
32464>>>>>        String sPassword
32464>>>>>        Get psEncryptPassword to sPassword
32465>>>>>        Function_Return sPassword
32466>>>>>    End_Function
32467>>>>>    
32467>>>>>    // Encrypts a string into an unreadable hash that can later be decrypted using DecryptKey.
32467>>>>>    //
32467>>>>>    // Params:
32467>>>>>    //   sPlainText     String to encrypt.
32467>>>>>    // Returns:
32467>>>>>    //   Base64 encoded hash.
32467>>>>>    Function EncryptPassword String sPlainText Returns String
32469>>>>>        String sEncryptPassword sBase64
32469>>>>>        UChar[] ucBinary
32470>>>>>        Pointer pBase64
32470>>>>>        Integer iVoid
32470>>>>>        
32470>>>>>        //  Encrypt Key
32470>>>>>        Get GetEncryptionPassword to sEncryptPassword
32471>>>>>        If (sEncryptPassword = "") Begin
32473>>>>>            Error DFERR_PROGRAM "No encryption password set"
32474>>>>>>
32474>>>>>        End
32474>>>>>>
32474>>>>>        
32474>>>>>        Get Encrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) (StringToUCharArray(sPlainText)) to ucBinary
32475>>>>>        
32475>>>>>        If (SizeOfArray(ucBinary) = 0) Begin
32477>>>>>            Error DFERR_PROGRAM "Unable to encrypt database login password"
32478>>>>>>
32478>>>>>            Function_Return ""
32479>>>>>        End
32479>>>>>>
32479>>>>>        
32479>>>>>        //  Encode binary hash to Base64
32479>>>>>        Move (Base64Encode(AddressOf(ucBinary), SizeOfArray(ucBinary))) to pBase64
32480>>>>>        Move (PointerToString(pBase64)) to sBase64
32481>>>>>        Move (Free(pBase64)) to iVoid
32482>>>>>        
32482>>>>>        Function_Return sBase64
32483>>>>>    End_Function
32484>>>>>    
32484>>>>>    
32484>>>>>    // Decrypts the unreadable hash generated by EncryptKey into a readable string.
32484>>>>>    //
32484>>>>>    // Params:
32484>>>>>    //   sBase64EncryptedPassword       Base64 Encrypted password
32484>>>>>    // Returns:
32484>>>>>    //   Readable plain text password
32484>>>>>    Function DecryptPassword String sBase64EncryptedPassword Returns String
32486>>>>>        String sEncryptPassword
32486>>>>>        UChar[] ucBinary ucPlain
32488>>>>>        Boolean bIsHex
32488>>>>>        Integer iLen iVoid
32488>>>>>        Pointer pBinary
32488>>>>>        
32488>>>>>        If (sBase64EncryptedPassword <> "") Begin
32490>>>>>            //  Decode from Base64
32490>>>>>            Move (Base64Decode(AddressOf(sBase64EncryptedPassword), &iLen)) to pBinary
32491>>>>>            
32491>>>>>            Move (ResizeArray(ucBinary, iLen, 0)) to ucBinary
32492>>>>>            Move (MemCopy(AddressOf(ucBinary), pBinary, iLen)) to iVoid
32493>>>>>                        
32493>>>>>            Move (Free(pBinary)) to iVoid
32494>>>>>            
32494>>>>>            //  Encrypted binary hash to string
32494>>>>>            Get GetEncryptionPassword to sEncryptPassword
32495>>>>>            Get Decrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) ucBinary to ucPlain
32496>>>>>        End
32496>>>>>>
32496>>>>>        
32496>>>>>        Function_Return (UCharArrayToString(ucPlain))
32497>>>>>    End_Function
32498>>>>>End_Class
32499>>>
32499>>>Object oLoginEncryption is a cLoginEncryption
32501>>>
32501>>>    // this must be created in your appsrc directory and must contain an encryption
32501>>>    // key that is set to psEncryptPassword. It will look something like this
32501>>>    //
32501>>>    // Set psEncryptPassword to "JchUAo7W@r.b{<Yk~OONi0nq=sMi[*Rn[A-`Vo)q"
32501>>>    //  
Including file: LoginEncryptionKey.inc    (E:\repositories\JenkinsDemo\AppSrc\LoginEncryptionKey.inc)
32501>>>>// Studio generated login encryption key
32501>>>>Set psEncryptPassword to "1Sgk82PlzjBVj$W#?)vt?d<fNeiz0U<BTMN$(W6l"
32502>>>>
32502>>>    
32502>>>    // use this to register this object to your cConnection Object. This object
32502>>>    // must be created after the cConnection object
32502>>>    Move Self to ghoLoginEncryption
32503>>>End_Object
32504>    End_Object
32505>End_Object
32506>
32506>Object oWebApp is a cWebApp
32508>    Set psTheme to "Df_Material"
32509>    Set peAlignView to alignCenter
32510>    
32510>    // It is important to set this so that all views will default
32510>    // to drill down style views.
32510>    Set peApplicationStyle to wvsDrillDown   
32511>    Set peApplicationStateMode to asmHistoryAndUrls 
32512>    Set psEncryptPassword to "SI(Z_4-1f6lVye$u%(\R&B8m_hHw|\?pb&tr4[L."
32513>
32513>    Object oViewStack is a cWebViewStack
32515>    End_Object
32516>    
32516>    Procedure HideHeader
32519>        WebSet pbRender of oHeaderPanel to False
32520>    End_Procedure
32521>
32521>    Procedure ShowHeader
32524>        WebSet pbRender of oHeaderPanel to True 
32525>    End_Procedure
32526>
32526>    Object oHeaderPanel is a cWebPanel
32528>        Set peRegion to prTop
32529>        Set psCSSClass to "HeaderPanel"
32530>        
32530>        Object oMenuPanel is a cWebPanel
32532>            Set peRegion to prLeft
32533>            Set piWidth to 50
32534>            
32534>            Object oMenuButton is a cWebMenuButton
32536>                Set piMenuHeight to 500
32537>
32537>                Object oDashboard_itm is a cWebMenuItem
32539>                    Set psCaption to C_$Dashboard
32540>                    
32540>                    RegisterPath ntNavigateBegin oDashboard
                    RegisterPath ntNavigateBegin oDashboard
ERROR: 4298 Command not found REGISTERPATH ON LINE: 45 (32540) OF FILE: E:\repositories\JenkinsDemo\AppSrc\WebApp.src
32540>
32540>                    Procedure OnClick
32543>                        Send NavigatePath
32544>                    End_Procedure
32545>                End_Object
32546>
32546>                Object oViewMenu is a cWebMenuItem
32548>                    Set psCaption to C_$View
32549>                End_Object
32550>
32550>                Object oSignOut_itm is a cWebMenuItem
32552>                    Set psCaption to C_$LogOut
32553>
32553>                    Procedure OnClick
32556>                        Send RequestLogOut of ghoWebSessionManager
32557>                    End_Procedure
32558>                End_Object
32559>            End_Object  
32560>
32560>            Object oBackButton is a cWebButton
32562>                Set psCSSClass to "WebBack_Icon"
32563>                Set pbRender to False
32564>                
32564>                Procedure OnClick
32567>                    Handle hoTop
32567>                    
32567>                    Get TopViewHandle of oViewStack to hoTop
32568>                    If (hoTop > 0) Begin
32570>                        Send NavigateCancel of hoTop 
32571>                    End
32571>                End_Procedure
32572>            End_Object
32573>            
32573>            Send AddClient of oViewStack Self
32574>                
32574>            Procedure OnUpdateViewStack
32577>                Handle hoTop hoDflt
32577>                Integer eMode
32577>                Boolean bTop
32577>                
32577>                WebGet peMode of ghoWebApp to eMode
32580>                
32580>                Get TopViewHandle of oViewStack to hoTop
32581>                Get GetDefaultView to hoDflt
32582>                Move (hoTop=0 or hoTop=hoDflt) to bTop
32583>                
32583>                WebSet pbRender of oBackButton to (not(bTop) and eMode >= rmMobile)
32584>                WebSet pbRender of oMenuButton to (bTop or eMode < rmMobile)
32585>            End_Procedure
32586>
32586>        End_Object
32587>
32587>        Object oCaptionPanel is a cWebPanel
32589>            Set piColumnCount to 12
32590>
32590>            Object oCaptionBreadcrumb is a cWebBreadcrumb
32592>                Set peBreadcrumbStyle to crumbCaption
32593>                WebSetResponsive peBreadcrumbStyle rmMobile to crumbDropDown
32594>            End_Object         
32595>        End_Object
32596>        
32596>        Object oActionPanel is a cWebPanel
32598>            Set peRegion to prRight
32599>            Set piColumnCount to 1
32600>            Set piWidth to 120
32601>
32601>            Object oMainActions is a cWebActionBar
32603>                Set psGroupName to "MainActions"
32604>
32604>                Set piColumnSpan to 0
32605>                Set peAlign to alignRight
32606>            End_Object
32607>        End_Object
32608>
32608>        Object oBreadcrumbPanel is a cWebPanel
32610>            Set peRegion to prBottom
32611>            
32611>            Object oHorizontalBreadcrumb is a cWebBreadcrumb
32613>                WebSetResponsive pbRender rmMobile to False
32614>            End_Object         
32615>        End_Object
32616>
32616>    End_Object    
32617>
32617>    Use SessionManager.wo
Including file: SessionManager.wo    (E:\repositories\JenkinsDemo\AppSrc\SessionManager.wo)
32617>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (C:\Appl\DataFlex 20.0\Pkg\cWebSessionManagerStandard.pkg)
32617>>>>>Use cWebSessionManager.pkg
32617>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (C:\Appl\DataFlex 20.0\Pkg\cWebAppSessionDataDictionary.dd)
32617>>>>>>>Use DataDict.pkg
32617>>>>>>>
32617>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (E:\repositories\JenkinsDemo\DDSrc\WebAppSession.fd)
32619>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (E:\repositories\JenkinsDemo\DDSrc\WebAppUser.fd)
32621>>>>>>>
32621>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
32622>>>>>>>    
32622>>>>>>>    Procedure Construct_Object
32624>>>>>>>        Forward Send Construct_Object
32626>>>>>>>        Set Main_File to WebAppSession.File_Number
32627>>>>>>>
32627>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
32628>>>>>>>
32628>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
32629>>>>>>>
32629>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
32630>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
32631>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
32632>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
32633>>>>>>>
32633>>>>>>>        Set Field_Option Field WebAppSession.Active DD_RETAIN to True
32634>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
32635>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
32636>>>>>>>
32636>>>>>>>    End_Procedure
32637>>>>>>>
32637>>>>>>>    Procedure Creating
32639>>>>>>>        DateTime dtCurrentDateTime
32639>>>>>>>        
32639>>>>>>>        Forward Send Creating
32641>>>>>>>        
32641>>>>>>>        //  Init usecounter
32641>>>>>>>        Move 0 to WebAppSession.UseCount
32642>>>>>>>        
32642>>>>>>>        //  Set the creation and access time to the current time
32642>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
32643>>>>>>>    
32643>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
32644>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
32645>>>>>>>        
32645>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
32646>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
32647>>>>>>>    End_Procedure
32648>>>>>>>    
32648>>>>>>>    
32648>>>>>>>    
32648>>>>>>>    //
32648>>>>>>>    //  Converts the given time to an string that can be saved in the database.
32648>>>>>>>    //
32648>>>>>>>    //  Params:
32648>>>>>>>    //      dtTime  Time to convert
32648>>>>>>>    //  Returns:
32648>>>>>>>    //      String with "HH:MM:SS" format
32648>>>>>>>    //
32648>>>>>>>    Function TimeToString DateTime dtTime Returns String
32650>>>>>>>        String sHours sMinutes sSeconds
32650>>>>>>>        
32650>>>>>>>        //  Extract parts
32650>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
32651>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
32652>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
32653>>>>>>>        
32653>>>>>>>        //  Fill out with 0
32653>>>>>>>        If (Length(sHours) = 1) ;            Move ("0" + sHours) to sHours
32656>>>>>>>        If (Length(sMinutes) = 1) ;            Move ("0" + sMinutes) to sMinutes
32659>>>>>>>        If (Length(sSeconds) = 1) ;            Move ("0" + sSeconds) to sSeconds
32662>>>>>>>        
32662>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
32663>>>>>>>    End_Function
32664>>>>>>>    
32664>>>>>>>    //
32664>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
32664>>>>>>>    //
32664>>>>>>>    //  Params:
32664>>>>>>>    //      dtTime  Datetime variable to add time to
32664>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
32664>>>>>>>    //  Returns:
32664>>>>>>>    //      dtDateTime with the loaded time
32664>>>>>>>    //
32664>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
32666>>>>>>>        String sHours sMinutes sSeconds
32666>>>>>>>        
32666>>>>>>>        //  Extract parts
32666>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
32667>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
32668>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
32669>>>>>>>        
32669>>>>>>>        //  Set to DateTime
32669>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
32670>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
32671>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
32672>>>>>>>        
32672>>>>>>>        Function_Return dtTime
32673>>>>>>>    End_Function
32674>>>>>>>
32674>>>>>>>End_Class
32675>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (C:\Appl\DataFlex 20.0\Pkg\cWebAppUserDataDictionary.dd)
32675>>>>>>>Use DataDict.pkg
32675>>>>>>>Open WebAppUser
32677>>>>>>>Open WebAppSession
32679>>>>>>>
32679>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
32680>>>>>>>    
32680>>>>>>>    Procedure Construct_Object
32682>>>>>>>        Forward Send Construct_Object
32684>>>>>>>        Set Main_File to WebAppUser.File_Number
32685>>>>>>>
32685>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
32686>>>>>>>
32686>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
32687>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
32688>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
32689>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
32690>>>>>>>    End_Procedure
32691>>>>>>>
32691>>>>>>>End_Class
32692>>>>>
32692>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
32693>>>>>    
32693>>>>>    Procedure Construct_Object
32695>>>>>        Handle hoUserDD hoSessionDD
32695>>>>>        
32695>>>>>        Forward Send Construct_Object
32697>>>>>        
32697>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
32698>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO        
32699>>>>>        
32699>>>>>        Get Create (RefClass(cWebAppUserDataDictionary)) to hoUserDD
32700>>>>>        Get Create (RefClass(cWebAppSessionDataDictionary)) to hoSessionDD
32701>>>>>        Set DDO_Server of hoSessionDD to hoUserDD
32702>>>>>
32702>>>>>        Set phoUserDD to hoUserDD
32703>>>>>        Set phoSessionDD to hoSessionDD
32704>>>>>        Property Boolean pbCreatingNewSession False
32705>>>>>        Property String psLoginName
32706>>>>>        Property String psUserName ""
32707>>>>>        Property Integer piUserRights 0
32708>>>>>    End_Procedure
32709>>>>>    
32709>>>>>    Function CreateSession String sRemoteAddress Returns String
32711>>>>>        String sSessionKey
32711>>>>>        Integer iErr
32711>>>>>        Boolean bLogWebSession
32711>>>>>        Handle hoSessionDD       
32711>>>>>        Get phoSessionDD to hoSessionDD
32712>>>>>        
32712>>>>>        //  Get session key
32712>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
32714>>>>>        
32714>>>>>        Get pbLogWebSession to bLogWebSession
32715>>>>>        If not bLogWebSession Begin
32717>>>>>            Function_Return sSessionKey        
32718>>>>>        End
32718>>>>>>
32718>>>>>
32718>>>>>        //  Store session
32718>>>>>        Send Clear of hoSessionDD
32719>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
32720>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
32721>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
32722>>>>>        Get Request_Validate of hoSessionDD to iErr
32723>>>>>        If (iErr) Begin
32725>>>>>            // this should not happen. If it does its a programming error
32725>>>>>            Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
32726>>>>>>
32726>>>>>            Function_Return ""
32727>>>>>        End
32727>>>>>>
32727>>>>>        Send Request_Save of hoSessionDD
32728>>>>>       
32728>>>>>        Function_Return sSessionKey        
32729>>>>>    End_Function
32730>>>>>    
32730>>>>>    
32730>>>>>    Function ValidateSession String sSessionKey Boolean bOptLoadWebApp Returns Boolean
32732>>>>>        DateTime dtLastAccess dtCurrent
32732>>>>>        TimeSpan tsDiff
32732>>>>>        Integer iErr iSessionTimeout iSpanMinutes
32732>>>>>        Boolean bResult bCreatingNewSession
32732>>>>>        Boolean bLogWebSession bLoadWebApp
32732>>>>>        Integer eLoginMode
32732>>>>>        String sTime
32732>>>>>        Handle hoSessionDD hoUserDD       
32732>>>>>        
32732>>>>>        Move False to bLoadWebApp
32733>>>>>        If (num_arguments >= 2) Begin
32735>>>>>            Move bOptLoadWebApp to bLoadWebApp
32736>>>>>        End
32736>>>>>>
32736>>>>>        
32736>>>>>        Get phoSessionDD to hoSessionDD
32737>>>>>        Get phoUserDD to hoUserDD
32738>>>>>        
32738>>>>>        Get pbLogWebSession to bLogWebSession
32739>>>>>        Get peLoginMode to eLoginMode
32740>>>>>        
32740>>>>>        // for this object, you can only disable logging if login completely is disabled
32740>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
32742>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
32743>>>>>>
32743>>>>>            Function_Return False
32744>>>>>        End
32744>>>>>>
32744>>>>>
32744>>>>>        //  Clear session properties
32744>>>>>        Set psSessionKey to ""
32745>>>>>        Send UpdateSessionProperties True
32746>>>>>        
32746>>>>>        If not bLogWebSession Begin
32748>>>>>            Forward Get ValidateSession sSessionKey to bResult
32750>>>>>            Function_Return bResult
32751>>>>>        End        
32751>>>>>>
32751>>>>>        
32751>>>>>        Move False to bResult
32752>>>>>        Get piSessionTimeout to iSessionTimeout 
32753>>>>>        
32753>>>>>        //  Check if session exists
32753>>>>>        Send Clear of hoSessionDD
32754>>>>>        Move sSessionKey to WebAppSession.SessionKey
32755>>>>>        Send Find of hoSessionDD EQ Index.1
32756>>>>>            
32756>>>>>        If (Found) Begin
32758>>>>>            //  Calculate timespan between now and last access time
32758>>>>>            Move (CurrentDateTime()) to dtCurrent
32759>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
32760>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
32761>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
32762>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
32763>>>>>            
32763>>>>>            //  Check if session didn't time out
32763>>>>>            If (IsDateValid(dtLastAccess) and (iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
32765>>>>>                Forward Get ValidateSession sSessionKey to bResult
32767>>>>>                   
32767>>>>>                If (bResult) Begin
32769>>>>>                    //  Update session record
32769>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
32770>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
32771>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
32772>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
32773>>>>>                    Get Request_Validate of hoSessionDD to iErr
32774>>>>>                    If (iErr) Begin
32776>>>>>                        // this should not happen. If it does its a programming error
32776>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
32777>>>>>>
32777>>>>>                        Function_Return False
32778>>>>>                    End
32778>>>>>>
32778>>>>>                    Send Request_Save of hoSessionDD
32779>>>>>                    
32779>>>>>                    //  Update user properties
32779>>>>>                    Send UpdateSessionProperties False
32780>>>>>                End
32780>>>>>>
32780>>>>>            End
32780>>>>>>
32780>>>>>            Else Begin
32781>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
32781>>>>>                Get pbCreatingNewSession to bCreatingNewSession
32782>>>>>                
32782>>>>>                If (not(bCreatingNewSession)) Begin
32784>>>>>                    Set pbCreatingNewSession to True                    
32785>>>>>                    Get RecreateSession of ghoWebApp to bResult
32786>>>>>                    Set pbCreatingNewSession to False
32787>>>>>                    
32787>>>>>                    If (not(bLoadWebApp)) Begin
32789>>>>>                        Move False to bResult   //  We can only continue immediately if we were loading the webapp, other operations are not allowed!
32790>>>>>                        Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
32791>>>>>>
32791>>>>>                        Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
32792>>>>>                    End
32792>>>>>>
32792>>>>>                End
32792>>>>>>
32792>>>>>            End
32792>>>>>>
32792>>>>>        End
32792>>>>>>
32792>>>>>        Else Begin
32793>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
32794>>>>>>
32794>>>>>        End
32794>>>>>>
32794>>>>>        
32794>>>>>        Function_Return bResult
32795>>>>>    End_Function
32796>>>>>    
32796>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
32798>>>>>        String sSessionKey sUserPassword
32798>>>>>        Handle hoSessionDD hoUserDD
32798>>>>>        Boolean bMatch  
32798>>>>>        
32798>>>>>        Get phoSessionDD to hoSessionDD
32799>>>>>        Get phoUserDD to hoUserDD
32800>>>>>        Integer iErr eLoginMode
32800>>>>>        
32800>>>>>        // Refind session record
32800>>>>>        Get psSessionKey to sSessionKey
32801>>>>>        Send Clear of hoSessionDD
32802>>>>>        Move sSessionKey to WebAppSession.SessionKey
32803>>>>>        Send Find of hoSessionDD EQ Index.1
32804>>>>>        
32804>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
32806>>>>>            Get peLoginMode to eLoginMode
32807>>>>>            
32807>>>>>            //  Find the user
32807>>>>>            Move sLoginName to WebAppUser.LoginName
32808>>>>>            Send Find of hoUserDD EQ Index.1
32809>>>>>            
32809>>>>>            // Check username and password
32809>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
32811>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
32812>>>>>                Get ComparePasswords (Trim(sUserPassword)) (Trim(sPassword)) to bMatch
32813>>>>>                
32813>>>>>                If (bMatch) Begin
32815>>>>>                    // Store the login
32815>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
32816>>>>>                    Get Request_Validate of hoSessionDD to iErr
32817>>>>>                    If (iErr) Begin
32819>>>>>                        // this should not happen. If it does its a programming error
32819>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
32820>>>>>>
32820>>>>>                        Function_Return False
32821>>>>>                    End
32821>>>>>>
32821>>>>>                    
32821>>>>>                    Send Request_Save of hoSessionDD
32822>>>>>                    
32822>>>>>                    // Update session properties
32822>>>>>                    Send UpdateSessionProperties False
32823>>>>>                    Send NotifyChangeRights
32824>>>>>                    Function_Return True
32825>>>>>                End
32825>>>>>>
32825>>>>>                Else Begin
32826>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
32826>>>>>                    Send Clear of hoUserDD
32827>>>>>                End
32827>>>>>>
32827>>>>>            End
32827>>>>>>
32827>>>>>        End
32827>>>>>>
32827>>>>>          
32827>>>>>        Function_Return False
32828>>>>>    End_Function
32829>>>>>    
32829>>>>>    Function IsLoggedIn Returns Boolean
32831>>>>>        String sLoginName
32831>>>>>        Boolean bLogWebSession bLoggedIn
32831>>>>>        
32831>>>>>        Get pbLogWebSession to bLogWebSession
32832>>>>>        If not bLogWebSession Begin
32834>>>>>            Forward Get IsLoggedIn to bLoggedIn
32836>>>>>            Function_Return bLoggedIn
32837>>>>>        End
32837>>>>>>
32837>>>>>        
32837>>>>>        Get psLoginName to sLoginName
32838>>>>>        
32838>>>>>        Function_Return (sLoginName <> "")
32839>>>>>    End_Function
32840>>>>>    
32840>>>>>    
32840>>>>>    //
32840>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
32840>>>>>    // update properties based on the session and user data. Augment this function to update 
32840>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
32840>>>>>    // the right records when this procedure is called.
32840>>>>>    //
32840>>>>>    // Params:
32840>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
32840>>>>>    //
32840>>>>>    Procedure UpdateSessionProperties Boolean bClear
32842>>>>>        Handle hoUserDD
32842>>>>>        
32842>>>>>        Get phoUserDD to hoUserDD
32843>>>>>        
32843>>>>>        //  Update user properties
32843>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
32845>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
32846>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
32847>>>>>            Set piUserRights to WebAppUser.Rights
32848>>>>>            
32848>>>>>            Send OnSessionPropertiesSet 
32849>>>>>        End
32849>>>>>>
32849>>>>>        Else Begin
32850>>>>>            Set psUsername to ""
32851>>>>>            Set psLoginName to ""
32852>>>>>            Set piUserRights to 0
32853>>>>>            
32853>>>>>            Send OnSessionPropertiesClear
32854>>>>>        End
32854>>>>>>
32854>>>>>    End_Procedure
32855>>>>>    
32855>>>>>    //
32855>>>>>    // This function is called to perform the password comparison. It gets the entered password and
32855>>>>>    // the password value of the user table as parameters. The WebAppUser buffer will contain the
32855>>>>>    // right record. This function can be augmented to implement security features like storing the
32855>>>>>    // password as a hashed value.
32855>>>>>    //
32855>>>>>    // Params:
32855>>>>>    //      sUserPassword       Value of the WebAppUser.Password field.
32855>>>>>    //      sEnteredPassword    Value entered on the login screen during login.
32855>>>>>    //
32855>>>>>    Function ComparePasswords String sUserPassword String sEnteredPassword Returns Boolean
32857>>>>>        Function_Return (sUserPassword = sEnteredPassword)
32858>>>>>    End_Function
32859>>>>>    
32859>>>>>    Procedure OnSessionPropertiesSet
32861>>>>>        //  Empty event stub
32861>>>>>    End_Procedure
32862>>>>>    
32862>>>>>    Procedure OnSessionPropertiesClear
32864>>>>>        //  Empty event stub
32864>>>>>    End_Procedure
32865>>>>>    
32865>>>>>    Procedure EndSession
32867>>>>>        Integer iErr
32867>>>>>        Boolean bLogWebSession
32867>>>>>        Handle hoSessionDD       
32867>>>>>        
32867>>>>>        Get phoSessionDD to hoSessionDD
32868>>>>>        Get pbLogWebSession to bLogWebSession
32869>>>>>        If not bLogWebSession Begin
32871>>>>>            Forward Send EndSession
32873>>>>>            Procedure_Return
32874>>>>>        End
32874>>>>>>
32874>>>>>            
32874>>>>>        //  Check if session exists
32874>>>>>        Send Clear of hoSessionDD
32875>>>>>        Get psSessionKey to WebAppSession.SessionKey
32876>>>>>        
32876>>>>>        Send Find of hoSessionDD EQ Index.1
32877>>>>>        If (Found) Begin
32879>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
32880>>>>>            Get Request_Validate of hoSessionDD to iErr
32881>>>>>            If (iErr) Begin
32883>>>>>                // this should not happen. If it does its a programming error
32883>>>>>                Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
32884>>>>>>
32884>>>>>                Procedure_Return
32885>>>>>            End
32885>>>>>>
32885>>>>>            Send Request_Save of hoSessionDD
32886>>>>>        End
32886>>>>>>
32886>>>>>    End_Procedure
32887>>>>>
32887>>>>>End_Class
32888>>>>>
32888>>>
32888>>>Object oSessionManager is a cWebSessionManagerStandard
32890>>>End_Object
32891>>>
32891>>>
32891>    Use Login.wo
Including file: Login.wo    (E:\repositories\JenkinsDemo\AppSrc\Login.wo)
32891>>>Use cWebView.pkg
32891>>>Use cWebForm.pkg
32891>>>Use cWebButton.pkg
32891>>>Use cWebPanel.pkg
32891>>>Use cWebLabel.pkg
32891>>>Use cWebSpacer.pkg
32891>>>Use cWebImage.pkg
32891>>>
32891>>>Object oLogin is a cWebView
32893>>>    Set piMinWidth to 250
32894>>>    Set piMaxWidth to 420
32895>>>    Set pbLoginModeEnforced to False
32896>>>    Set piColumnCount to 12
32897>>>    Set psCSSClass to "LoginView"
32898>>>    Set pbServerOnSubmit to True
32899>>>    
32899>>>    Set psStateViewName to "Login"
32900>>>    Set pbStateReplace to True  // Always replace the state so the login never becomes its own history item
32901>>>    
32901>>>    Property String psPrevStateHash ""  // Remember the state hash that the user navigated too so we can redirect after login
32905>>>    
32905>>>    Delegate Set phoLoginView to Self
32907>>>    
32907>>>    Object oTopSpacer is a cWebSpacer
32909>>>        Set pbFillHeight to True
32910>>>        Set piColumnSpan to 12
32911>>>    End_Object
32912>>>    
32912>>>    Object oWarning is a cWebLabel
32914>>>        Set pbVisible to False
32915>>>        Set psCaption to "Invalid User ID or password. \n\rHint: 'Guest' & 'guest'."
32916>>>        Set peAlign to alignCenter
32917>>>        Set piColumnSpan to 12
32918>>>        Set psCSSClass to "LoginWarning"
32919>>>    End_Object
32920>>>    
32920>>>    Object oLogo is a cWebImage
32922>>>        Set piColumnSpan to 10
32923>>>        Set psUrl to "images/DF_Logo_Retina.png"
32924>>>        Set pePosition to wiFit
32925>>>        Set piColumnIndex to 1
32926>>>        Set piHeight to 160
32927>>>        
32927>>>        WebSetResponsive piHeight rmMobile to 100  // Best for small smart phones
32928>>>    End_Object
32929>>>    
32929>>>    Object oLoginName is a cWebForm
32931>>>        Set psLabel to "User ID:"
32932>>>        Set peLabelPosition to lpTop
32933>>>        Set piMaxLength to 20
32934>>>        Set piColumnIndex to 1
32935>>>        Set pbShowLabel to False
32936>>>        Set psPlaceHolder to "loginname"
32937>>>        Set piColumnSpan to 10
32938>>>        Set psAutoComplete to "username"
32939>>>    End_Object
32940>>>    
32940>>>    Object oPassword is a cWebForm
32942>>>        Set psLabel to "Password:"
32943>>>        Set pbPassword to True
32944>>>        Set peLabelAlign to alignLeft
32945>>>        Set piMaxLength to 20
32946>>>        Set peLabelPosition to lpTop
32947>>>        Set pbShowLabel to False
32948>>>        Set psPlaceHolder to "password"
32949>>>        Set piColumnSpan to 10
32950>>>        Set piColumnIndex to 1
32951>>>        Set psAutoComplete to "current-password"
32952>>>    End_Object
32953>>>    
32953>>>    Object oWebSpacer1 is a cWebSpacer
32955>>>        Set piColumnSpan to 12
32956>>>        Set piHeight to 10
32957>>>    End_Object
32958>>>    
32958>>>    Object oLoginButton is a cWebButton
32960>>>        Set pbShowLabel to False
32961>>>        Set psCaption to "sign in"
32962>>>        Set pbServerOnClick to True
32963>>>        Set piColumnSpan to 10
32964>>>        Set piColumnIndex to 1
32965>>>        
32965>>>        Procedure OnClick
32968>>>            Send DoLogin
32969>>>        End_Procedure
32970>>>    End_Object
32971>>>    
32971>>>    Object oBottomSpacer is a cWebSpacer
32973>>>        Set pbFillHeight to True
32974>>>        Set piColumnSpan to 12
32975>>>    End_Object
32976>>>    
32976>>>    Procedure DoLogin
32979>>>        String sLoginName sPassword sPrevStateHash
32979>>>        Boolean bResult
32979>>>        
32979>>>        WebGet psValue of oLoginName to sLoginName
32982>>>        WebGet psValue of oPassword to sPassword
32985>>>        
32985>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
32986>>>        
32986>>>        If (bResult) Begin
32988>>>            Send Hide of oLogin
32989>>>            Send ShowHeader of ghoWebApp
32990>>>            WebSet psCSSClass of ghoWebApp to ""
32991>>>            
32991>>>            WebGet psPrevStateHash to sPrevStateHash
32994>>>            Send NavigateToStateHash of ghoWebApp sPrevStateHash True
32995>>>            
32995>>>            // clear the login values. we don't want to return the login id & password as synchronized properties....
32995>>>            WebSet psValue of oLoginName to ""
32996>>>            WebSet psValue of oPassword  to ""
32997>>>            WebSet pbVisible of oWarning to False
32998>>>        End
32998>>>>
32998>>>        Else Begin
32999>>>            WebSet pbVisible of oWarning to True
33000>>>        End
33000>>>>
33000>>>    End_Procedure
33001>>>    
33001>>>    Procedure OnSubmit
33004>>>        Send DoLogin
33005>>>    End_Procedure
33006>>>    
33006>>>    Procedure OnLoad
33009>>>        String sPrevStateHash sView
33009>>>        
33009>>>        Forward Send OnLoad
33011>>>        
33011>>>        //  Store the current state so we can go back to that later (only if it points to a different view)
33011>>>        Get StateHash of ghoWebApp to sPrevStateHash
33012>>>        Send ParseViewStateHash sPrevStateHash (&sView)
33013>>>        If (Lowercase(sView) <> Lowercase(psStateViewName(Self))) Begin
33015>>>            WebSet psPrevStateHash to sPrevStateHash
33016>>>        End
33016>>>>
33016>>>        
33016>>>    End_Procedure
33017>>>    
33017>>>    Procedure OnBeforeShow
33020>>>        //  Hide header & apply nice background style
33020>>>        Send HideHeader to ghoWebApp
33021>>>        WebSet psCSSClass of ghoWebApp to "LoginBackground"
33022>>>    End_Procedure
33023>>>    
33023>>>End_Object
33024>>>
33024>>>
33024>>>
33024>>>
33024>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (E:\repositories\JenkinsDemo\AppSrc\WebResourceManager.wo)
33024>>>Use cWebResourceManager.pkg
33024>>>
33024>>>Object oWebResourceManager is a cWebResourceManager
33026>>>End_Object
33027>    
33027>    Use Dashboard.wo
Including file: Dashboard.wo    (E:\repositories\JenkinsDemo\AppSrc\Dashboard.wo)
33027>>>Use cWebView.pkg
33027>>>Use cWebPanel.pkg
33027>>>Use cWebForm.pkg
33027>>>Use cWebButton.pkg
33027>>>Use cWebGroup.pkg
33027>>>Use cWebSpacer.pkg
33027>>>Use cWebHtmlBox.pkg
33027>>>Use cWebMenuGroup.pkg
33027>>>Use cWebMenuItem.pkg
33027>>>Use cWebLabel.pkg
33027>>>Use cWebList.pkg
33027>>>Use cWebColumn.pkg
33027>>>
33027>>>Object oDashboard is a cWebView
33029>>>
33029>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
33029>>>    // Add a DDO Structure 
33029>>>    //
33029>>>    // There is no need to synchronize a DD structure on the client so we do
33029>>>    // not set the Server property or send ADDOStructure. We will simply use
33029>>>    // DDO's to mine data and generate HTML for our cWebHTMLBox objects.
33029>>>    // It is the HTML in these objects that is sent to the client each time 
33029>>>    // this page is shown.
33029>>>    //
33029>>>    // Also, it is important for the drill-down Navigation interface that we
33029>>>    // do not set the Server property to some DDO because this will affect 
33029>>>    // constraints in the next view that we navigate to.
33029>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
33029>>>
33029>>>    Set piMaxWidth to 1024
33030>>>    
33030>>>    Set psCaption to "Dashboard"
33031>>>    Set peViewType to vtUndefined
33032>>>    Set pbShowCaption to False
33033>>>    Set psCSSClass to "Dashboard"
33034>>>    
33034>>>    Object oWebMainPanel is a cWebPanel
33036>>>        Set piColumnCount to 24
33037>>>        
33037>>>        // - - - - - - - - - - - - - - -
33037>>>        // Main Panel's Responsive Rules
33037>>>        // - - - - - - - - - - - - - - -
33037>>>        WebSetResponsive piColumnCount rmMobile to 1
33038>>>        WebSetResponsive piColumnCount rmTabletPortrait to 16
33039>>>    
33039>>>        Object oTiles_grp is a cWebGroup
33041>>>            Set piColumnSpan to 8
33042>>>            Set pbShowBorder to False
33043>>>            Set pbShowCaption to False
33044>>>            Set piColumnCount to 12
33045>>>            
33045>>>            Set psCSSClass to "TilesGroup"
33046>>>    
33046>>>            Object oWelcomeTile is a cWebHtmlBox
33048>>>                Set piColumnSpan to 6
33049>>>                Set psCSSClass to "Tile Light"
33050>>>                Set psHtml to '<div Class="WebCon_Sizer"><div class="Tile_Title">Welcome</div><div Class="Tile_Subtitle">--</div></div>'
33051>>>    
33051>>>                Procedure OnLoad
33054>>>                    Send UpdateHTML ('<div class="WebCon_Sizer">' + ;                                     '<div class="Tile_Title">Welcome</div>' +;                                     '<div class="Tile_Subtitle">' - htmlEncode(psUserName(ghoWebSessionManager)) - '</div>' +;                                     '</div>')
33055>>>                End_Procedure
33056>>>                
33056>>>            End_Object
33057>>>    
33057>>>            Object oTile2 is a cWebHtmlBox
33059>>>                Set pbServerOnClick to True
33060>>>                Set piColumnSpan to 6
33061>>>                Set piColumnIndex to 6
33062>>>                Set psCSSClass to "Tile LightAlternate"
33063>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 2</div><div class="Tile_Subtitle"></div></div>'
33064>>>                                
33064>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
33064>>>                
33064>>>                Procedure OnClick String sId String sParam
33067>>>                    Send NavigatePath
33068>>>                End_Procedure
33069>>>                
33069>>>            End_Object
33070>>>    
33070>>>            Object oTile3 is a cWebHtmlBox
33072>>>                Set pbServerOnClick to True
33073>>>                Set piColumnSpan to 6
33074>>>                Set psCSSClass to "Tile Dark"
33075>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 3</div><div class="Tile_Subtitle"></div></div>'
33076>>>    
33076>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
33076>>>                
33076>>>                Procedure OnClick String sId String sParam
33079>>>                    Send NavigatePath
33080>>>                End_Procedure
33081>>>                
33081>>>            End_Object
33082>>>    
33082>>>            Object oTile4 is a cWebHtmlBox
33084>>>                Set pbServerOnClick to True
33085>>>                Set piColumnSpan to 6
33086>>>                Set piColumnIndex to 6
33087>>>                Set psCSSClass to "Tile DarkAlternate"
33088>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 4</div><div class="Tile_Subtitle"></div></div>'
33089>>>            
33089>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
33089>>>                
33089>>>                Procedure OnClick String sId String sParam
33092>>>                    Send NavigatePath
33093>>>                End_Procedure
33094>>>                
33094>>>            End_Object
33095>>>        End_Object
33096>>>    
33096>>>    End_Object
33097>>>    
33097>>>    Procedure OnBeforeShow
33100>>>        // Each time this view is shown we will update the appropriate information.
33100>>>    End_Procedure
33101>>>
33101>>>End_Object
33102>    Set phoDefaultView to oDashboard
33103>
33103>End_Object
33104>
33104>Send StartWebApp of oWebApp
33105>
Summary
Memory Available: 8855281664
Total Warnings : 0
Total Errors   : 1
Total Symbols  : 22258
Total Resources: 0
Total Commands : 33104
Total Windows  : 0
Total Pages    : 0
Static Data    : 423325
Message area   : 225686
Total Blocks   : 15073
1 ERROR HAS BEEN FOUND.
