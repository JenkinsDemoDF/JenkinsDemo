Compiling Program: E:\repositories\JenkinsDemo\AppSrc\WebApp.src
Memory Available: 8728772608
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.x64.pkd    (C:\Appl\DataFlex 20.0\Pkg\AllWebAppClasses.x64.pkd)
32444>Use cConnection.pkg
32444>
32444>Object oApplication is a cApplication
32446>    Object oConnection is a cConnection
32448>        Use LoginEncryption.pkg
Including file: LoginEncryption.pkg    (C:\Appl\DataFlex 20.0\Pkg\LoginEncryption.pkg)
32448>>>Use cLoginEncryption.pkg
Including file: cLoginEncryption.pkg    (C:\Appl\DataFlex 20.0\Pkg\cLoginEncryption.pkg)
32448>>>>>Use cCryptographerEx.pkg
32448>>>>>
32448>>>>>Class cLoginEncryption is a cObject
32449>>>>>    
32449>>>>>    Procedure Construct_Object
32451>>>>>        Forward Send Construct_Object
32453>>>>>        // this must be set to a multi (40ish) character random key
32453>>>>>        Property String psEncryptPassword ""
32454>>>>>        
32454>>>>>        Object oDataCrypter is a cCryptographerEx
32456>>>>>            Set piHash to CALG_SHA_256
32457>>>>>            Set piCipher to CALG_AES_256
32458>>>>>            Set psProvider to "" //  Not providing a specific provider gives the default provider for the provider type
32459>>>>>            Set piProvider to PROV_RSA_AES
32460>>>>>        End_Object
32461>>>>>    End_Procedure
32462>>>>>    
32462>>>>>    // This can be augmented to return a password encryption key using any
32462>>>>>    // hidden mechanism desired.
32462>>>>>    Function GetEncryptionPassword Returns String
32464>>>>>        String sPassword
32464>>>>>        Get psEncryptPassword to sPassword
32465>>>>>        Function_Return sPassword
32466>>>>>    End_Function
32467>>>>>    
32467>>>>>    // Encrypts a string into an unreadable hash that can later be decrypted using DecryptKey.
32467>>>>>    //
32467>>>>>    // Params:
32467>>>>>    //   sPlainText     String to encrypt.
32467>>>>>    // Returns:
32467>>>>>    //   Base64 encoded hash.
32467>>>>>    Function EncryptPassword String sPlainText Returns String
32469>>>>>        String sEncryptPassword sBase64
32469>>>>>        UChar[] ucBinary
32470>>>>>        Pointer pBase64
32470>>>>>        Integer iVoid
32470>>>>>        
32470>>>>>        //  Encrypt Key
32470>>>>>        Get GetEncryptionPassword to sEncryptPassword
32471>>>>>        If (sEncryptPassword = "") Begin
32473>>>>>            Error DFERR_PROGRAM "No encryption password set"
32474>>>>>>
32474>>>>>        End
32474>>>>>>
32474>>>>>        
32474>>>>>        Get Encrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) (StringToUCharArray(sPlainText)) to ucBinary
32475>>>>>        
32475>>>>>        If (SizeOfArray(ucBinary) = 0) Begin
32477>>>>>            Error DFERR_PROGRAM "Unable to encrypt database login password"
32478>>>>>>
32478>>>>>            Function_Return ""
32479>>>>>        End
32479>>>>>>
32479>>>>>        
32479>>>>>        //  Encode binary hash to Base64
32479>>>>>        Move (Base64Encode(AddressOf(ucBinary), SizeOfArray(ucBinary))) to pBase64
32480>>>>>        Move (PointerToString(pBase64)) to sBase64
32481>>>>>        Move (Free(pBase64)) to iVoid
32482>>>>>        
32482>>>>>        Function_Return sBase64
32483>>>>>    End_Function
32484>>>>>    
32484>>>>>    
32484>>>>>    // Decrypts the unreadable hash generated by EncryptKey into a readable string.
32484>>>>>    //
32484>>>>>    // Params:
32484>>>>>    //   sBase64EncryptedPassword       Base64 Encrypted password
32484>>>>>    // Returns:
32484>>>>>    //   Readable plain text password
32484>>>>>    Function DecryptPassword String sBase64EncryptedPassword Returns String
32486>>>>>        String sEncryptPassword
32486>>>>>        UChar[] ucBinary ucPlain
32488>>>>>        Boolean bIsHex
32488>>>>>        Integer iLen iVoid
32488>>>>>        Pointer pBinary
32488>>>>>        
32488>>>>>        If (sBase64EncryptedPassword <> "") Begin
32490>>>>>            //  Decode from Base64
32490>>>>>            Move (Base64Decode(AddressOf(sBase64EncryptedPassword), &iLen)) to pBinary
32491>>>>>            
32491>>>>>            Move (ResizeArray(ucBinary, iLen, 0)) to ucBinary
32492>>>>>            Move (MemCopy(AddressOf(ucBinary), pBinary, iLen)) to iVoid
32493>>>>>                        
32493>>>>>            Move (Free(pBinary)) to iVoid
32494>>>>>            
32494>>>>>            //  Encrypted binary hash to string
32494>>>>>            Get GetEncryptionPassword to sEncryptPassword
32495>>>>>            Get Decrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) ucBinary to ucPlain
32496>>>>>        End
32496>>>>>>
32496>>>>>        
32496>>>>>        Function_Return (UCharArrayToString(ucPlain))
32497>>>>>    End_Function
32498>>>>>End_Class
32499>>>
32499>>>Object oLoginEncryption is a cLoginEncryption
32501>>>
32501>>>    // this must be created in your appsrc directory and must contain an encryption
32501>>>    // key that is set to psEncryptPassword. It will look something like this
32501>>>    //
32501>>>    // Set psEncryptPassword to "JchUAo7W@r.b{<Yk~OONi0nq=sMi[*Rn[A-`Vo)q"
32501>>>    //  
Including file: LoginEncryptionKey.inc    (E:\repositories\JenkinsDemo\AppSrc\LoginEncryptionKey.inc)
32501>>>>// Studio generated login encryption key
32501>>>>Set psEncryptPassword to "1Sgk82PlzjBVj$W#?)vt?d<fNeiz0U<BTMN$(W6l"
32502>>>>
32502>>>    
32502>>>    // use this to register this object to your cConnection Object. This object
32502>>>    // must be created after the cConnection object
32502>>>    Move Self to ghoLoginEncryption
32503>>>End_Object
32504>    End_Object
32505>End_Object
32506>
32506>Object oWebApp is a cWebApp
32508>    Set psTheme to "Df_Material"
32509>    Set peAlignView to alignCenter
32510>    
32510>    // It is important to set this so that all views will default
32510>    // to drill down style views.
32510>    Set peApplicationStyle to wvsDrillDown   
32511>    Set peApplicationStateMode to asmHistoryAndUrls 
32512>    Set psEncryptPassword to "SI(Z_4-1f6lVye$u%(\R&B8m_hHw|\?pb&tr4[L."
32513>
32513>    Object oViewStack is a cWebViewStack
32515>    End_Object
32516>    
32516>    Procedure HideHeader
32519>        WebSet pbRender of oHeaderPanel to False
32520>    End_Procedure
32521>
32521>    Procedure ShowHeader
32524>        WebSet pbRender of oHeaderPanel to True 
32525>    End_Procedure
32526>
32526>    Object oHeaderPanel is a cWebPanel
32528>        Set peRegion to prTop
32529>        Set psCSSClass to "HeaderPanel"
32530>        
32530>        Object oMenuPanel is a cWebPanel
32532>            Set peRegion to prLeft
32533>            Set piWidth to 50
32534>            
32534>            Object oMenuButton is a cWebMenuButton
32536>                Set piMenuHeight to 500
32537>
32537>                Object oDashboard_itm is a cWebMenuItem
32539>                    Set psCaption to C_$Dashboard
32540>                    
32540>                    WebRegisterPath ntNavigateBegin oDashboard
32546>
32546>                    Procedure OnClick
32549>                        Send NavigatePath
32550>                    End_Procedure
32551>                End_Object
32552>
32552>                Object oViewMenu is a cWebMenuItem
32554>                    Set psCaption to C_$View
32555>                End_Object
32556>
32556>                Object oSignOut_itm is a cWebMenuItem
32558>                    Set psCaption to C_$LogOut
32559>
32559>                    Procedure OnClick
32562>                        Send RequestLogOut of ghoWebSessionManager
32563>                    End_Procedure
32564>                End_Object
32565>            End_Object  
32566>
32566>            Object oBackButton is a cWebButton
32568>                Set psCSSClass to "WebBack_Icon"
32569>                Set pbRender to False
32570>                
32570>                Procedure OnClick
32573>                    Handle hoTop
32573>                    
32573>                    Get TopViewHandle of oViewStack to hoTop
32574>                    If (hoTop > 0) Begin
32576>                        Send NavigateCancel of hoTop 
32577>                    End
32577>                End_Procedure
32578>            End_Object
32579>            
32579>            Send AddClient of oViewStack Self
32580>                
32580>            Procedure OnUpdateViewStack
32583>                Handle hoTop hoDflt
32583>                Integer eMode
32583>                Boolean bTop
32583>                
32583>                WebGet peMode of ghoWebApp to eMode
32586>                
32586>                Get TopViewHandle of oViewStack to hoTop
32587>                Get GetDefaultView to hoDflt
32588>                Move (hoTop=0 or hoTop=hoDflt) to bTop
32589>                
32589>                WebSet pbRender of oBackButton to (not(bTop) and eMode >= rmMobile)
32590>                WebSet pbRender of oMenuButton to (bTop or eMode < rmMobile)
32591>            End_Procedure
32592>
32592>        End_Object
32593>
32593>        Object oCaptionPanel is a cWebPanel
32595>            Set piColumnCount to 12
32596>
32596>            Object oCaptionBreadcrumb is a cWebBreadcrumb
32598>                Set peBreadcrumbStyle to crumbCaption
32599>                WebSetResponsive peBreadcrumbStyle rmMobile to crumbDropDown
32600>            End_Object         
32601>        End_Object
32602>        
32602>        Object oActionPanel is a cWebPanel
32604>            Set peRegion to prRight
32605>            Set piColumnCount to 1
32606>            Set piWidth to 120
32607>
32607>            Object oMainActions is a cWebActionBar
32609>                Set psGroupName to "MainActions"
32610>
32610>                Set piColumnSpan to 0
32611>                Set peAlign to alignRight
32612>            End_Object
32613>        End_Object
32614>
32614>        Object oBreadcrumbPanel is a cWebPanel
32616>            Set peRegion to prBottom
32617>            
32617>            Object oHorizontalBreadcrumb is a cWebBreadcrumb
32619>                WebSetResponsive pbRender rmMobile to False
32620>            End_Object         
32621>        End_Object
32622>
32622>    End_Object    
32623>
32623>    Use SessionManager.wo
Including file: SessionManager.wo    (E:\repositories\JenkinsDemo\AppSrc\SessionManager.wo)
32623>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (C:\Appl\DataFlex 20.0\Pkg\cWebSessionManagerStandard.pkg)
32623>>>>>Use cWebSessionManager.pkg
32623>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (C:\Appl\DataFlex 20.0\Pkg\cWebAppSessionDataDictionary.dd)
32623>>>>>>>Use DataDict.pkg
32623>>>>>>>
32623>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (E:\repositories\JenkinsDemo\DDSrc\WebAppSession.fd)
32625>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (E:\repositories\JenkinsDemo\DDSrc\WebAppUser.fd)
32627>>>>>>>
32627>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
32628>>>>>>>    
32628>>>>>>>    Procedure Construct_Object
32630>>>>>>>        Forward Send Construct_Object
32632>>>>>>>        Set Main_File to WebAppSession.File_Number
32633>>>>>>>
32633>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
32634>>>>>>>
32634>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
32635>>>>>>>
32635>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
32636>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
32637>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
32638>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
32639>>>>>>>
32639>>>>>>>        Set Field_Option Field WebAppSession.Active DD_RETAIN to True
32640>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
32641>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
32642>>>>>>>
32642>>>>>>>    End_Procedure
32643>>>>>>>
32643>>>>>>>    Procedure Creating
32645>>>>>>>        DateTime dtCurrentDateTime
32645>>>>>>>        
32645>>>>>>>        Forward Send Creating
32647>>>>>>>        
32647>>>>>>>        //  Init usecounter
32647>>>>>>>        Move 0 to WebAppSession.UseCount
32648>>>>>>>        
32648>>>>>>>        //  Set the creation and access time to the current time
32648>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
32649>>>>>>>    
32649>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
32650>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
32651>>>>>>>        
32651>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
32652>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
32653>>>>>>>    End_Procedure
32654>>>>>>>    
32654>>>>>>>    
32654>>>>>>>    
32654>>>>>>>    //
32654>>>>>>>    //  Converts the given time to an string that can be saved in the database.
32654>>>>>>>    //
32654>>>>>>>    //  Params:
32654>>>>>>>    //      dtTime  Time to convert
32654>>>>>>>    //  Returns:
32654>>>>>>>    //      String with "HH:MM:SS" format
32654>>>>>>>    //
32654>>>>>>>    Function TimeToString DateTime dtTime Returns String
32656>>>>>>>        String sHours sMinutes sSeconds
32656>>>>>>>        
32656>>>>>>>        //  Extract parts
32656>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
32657>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
32658>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
32659>>>>>>>        
32659>>>>>>>        //  Fill out with 0
32659>>>>>>>        If (Length(sHours) = 1) ;            Move ("0" + sHours) to sHours
32662>>>>>>>        If (Length(sMinutes) = 1) ;            Move ("0" + sMinutes) to sMinutes
32665>>>>>>>        If (Length(sSeconds) = 1) ;            Move ("0" + sSeconds) to sSeconds
32668>>>>>>>        
32668>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
32669>>>>>>>    End_Function
32670>>>>>>>    
32670>>>>>>>    //
32670>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
32670>>>>>>>    //
32670>>>>>>>    //  Params:
32670>>>>>>>    //      dtTime  Datetime variable to add time to
32670>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
32670>>>>>>>    //  Returns:
32670>>>>>>>    //      dtDateTime with the loaded time
32670>>>>>>>    //
32670>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
32672>>>>>>>        String sHours sMinutes sSeconds
32672>>>>>>>        
32672>>>>>>>        //  Extract parts
32672>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
32673>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
32674>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
32675>>>>>>>        
32675>>>>>>>        //  Set to DateTime
32675>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
32676>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
32677>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
32678>>>>>>>        
32678>>>>>>>        Function_Return dtTime
32679>>>>>>>    End_Function
32680>>>>>>>
32680>>>>>>>End_Class
32681>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (C:\Appl\DataFlex 20.0\Pkg\cWebAppUserDataDictionary.dd)
32681>>>>>>>Use DataDict.pkg
32681>>>>>>>Open WebAppUser
32683>>>>>>>Open WebAppSession
32685>>>>>>>
32685>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
32686>>>>>>>    
32686>>>>>>>    Procedure Construct_Object
32688>>>>>>>        Forward Send Construct_Object
32690>>>>>>>        Set Main_File to WebAppUser.File_Number
32691>>>>>>>
32691>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
32692>>>>>>>
32692>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
32693>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
32694>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
32695>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
32696>>>>>>>    End_Procedure
32697>>>>>>>
32697>>>>>>>End_Class
32698>>>>>
32698>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
32699>>>>>    
32699>>>>>    Procedure Construct_Object
32701>>>>>        Handle hoUserDD hoSessionDD
32701>>>>>        
32701>>>>>        Forward Send Construct_Object
32703>>>>>        
32703>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
32704>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO        
32705>>>>>        
32705>>>>>        Get Create (RefClass(cWebAppUserDataDictionary)) to hoUserDD
32706>>>>>        Get Create (RefClass(cWebAppSessionDataDictionary)) to hoSessionDD
32707>>>>>        Set DDO_Server of hoSessionDD to hoUserDD
32708>>>>>
32708>>>>>        Set phoUserDD to hoUserDD
32709>>>>>        Set phoSessionDD to hoSessionDD
32710>>>>>        Property Boolean pbCreatingNewSession False
32711>>>>>        Property String psLoginName
32712>>>>>        Property String psUserName ""
32713>>>>>        Property Integer piUserRights 0
32714>>>>>    End_Procedure
32715>>>>>    
32715>>>>>    Function CreateSession String sRemoteAddress Returns String
32717>>>>>        String sSessionKey
32717>>>>>        Integer iErr
32717>>>>>        Boolean bLogWebSession
32717>>>>>        Handle hoSessionDD       
32717>>>>>        Get phoSessionDD to hoSessionDD
32718>>>>>        
32718>>>>>        //  Get session key
32718>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
32720>>>>>        
32720>>>>>        Get pbLogWebSession to bLogWebSession
32721>>>>>        If not bLogWebSession Begin
32723>>>>>            Function_Return sSessionKey        
32724>>>>>        End
32724>>>>>>
32724>>>>>
32724>>>>>        //  Store session
32724>>>>>        Send Clear of hoSessionDD
32725>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
32726>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
32727>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
32728>>>>>        Get Request_Validate of hoSessionDD to iErr
32729>>>>>        If (iErr) Begin
32731>>>>>            // this should not happen. If it does its a programming error
32731>>>>>            Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
32732>>>>>>
32732>>>>>            Function_Return ""
32733>>>>>        End
32733>>>>>>
32733>>>>>        Send Request_Save of hoSessionDD
32734>>>>>       
32734>>>>>        Function_Return sSessionKey        
32735>>>>>    End_Function
32736>>>>>    
32736>>>>>    
32736>>>>>    Function ValidateSession String sSessionKey Boolean bOptLoadWebApp Returns Boolean
32738>>>>>        DateTime dtLastAccess dtCurrent
32738>>>>>        TimeSpan tsDiff
32738>>>>>        Integer iErr iSessionTimeout iSpanMinutes
32738>>>>>        Boolean bResult bCreatingNewSession
32738>>>>>        Boolean bLogWebSession bLoadWebApp
32738>>>>>        Integer eLoginMode
32738>>>>>        String sTime
32738>>>>>        Handle hoSessionDD hoUserDD       
32738>>>>>        
32738>>>>>        Move False to bLoadWebApp
32739>>>>>        If (num_arguments >= 2) Begin
32741>>>>>            Move bOptLoadWebApp to bLoadWebApp
32742>>>>>        End
32742>>>>>>
32742>>>>>        
32742>>>>>        Get phoSessionDD to hoSessionDD
32743>>>>>        Get phoUserDD to hoUserDD
32744>>>>>        
32744>>>>>        Get pbLogWebSession to bLogWebSession
32745>>>>>        Get peLoginMode to eLoginMode
32746>>>>>        
32746>>>>>        // for this object, you can only disable logging if login completely is disabled
32746>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
32748>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
32749>>>>>>
32749>>>>>            Function_Return False
32750>>>>>        End
32750>>>>>>
32750>>>>>
32750>>>>>        //  Clear session properties
32750>>>>>        Set psSessionKey to ""
32751>>>>>        Send UpdateSessionProperties True
32752>>>>>        
32752>>>>>        If not bLogWebSession Begin
32754>>>>>            Forward Get ValidateSession sSessionKey to bResult
32756>>>>>            Function_Return bResult
32757>>>>>        End        
32757>>>>>>
32757>>>>>        
32757>>>>>        Move False to bResult
32758>>>>>        Get piSessionTimeout to iSessionTimeout 
32759>>>>>        
32759>>>>>        //  Check if session exists
32759>>>>>        Send Clear of hoSessionDD
32760>>>>>        Move sSessionKey to WebAppSession.SessionKey
32761>>>>>        Send Find of hoSessionDD EQ Index.1
32762>>>>>            
32762>>>>>        If (Found) Begin
32764>>>>>            //  Calculate timespan between now and last access time
32764>>>>>            Move (CurrentDateTime()) to dtCurrent
32765>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
32766>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
32767>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
32768>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
32769>>>>>            
32769>>>>>            //  Check if session didn't time out
32769>>>>>            If (IsDateValid(dtLastAccess) and (iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
32771>>>>>                Forward Get ValidateSession sSessionKey to bResult
32773>>>>>                   
32773>>>>>                If (bResult) Begin
32775>>>>>                    //  Update session record
32775>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
32776>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
32777>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
32778>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
32779>>>>>                    Get Request_Validate of hoSessionDD to iErr
32780>>>>>                    If (iErr) Begin
32782>>>>>                        // this should not happen. If it does its a programming error
32782>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
32783>>>>>>
32783>>>>>                        Function_Return False
32784>>>>>                    End
32784>>>>>>
32784>>>>>                    Send Request_Save of hoSessionDD
32785>>>>>                    
32785>>>>>                    //  Update user properties
32785>>>>>                    Send UpdateSessionProperties False
32786>>>>>                End
32786>>>>>>
32786>>>>>            End
32786>>>>>>
32786>>>>>            Else Begin
32787>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
32787>>>>>                Get pbCreatingNewSession to bCreatingNewSession
32788>>>>>                
32788>>>>>                If (not(bCreatingNewSession)) Begin
32790>>>>>                    Set pbCreatingNewSession to True                    
32791>>>>>                    Get RecreateSession of ghoWebApp to bResult
32792>>>>>                    Set pbCreatingNewSession to False
32793>>>>>                    
32793>>>>>                    If (not(bLoadWebApp)) Begin
32795>>>>>                        Move False to bResult   //  We can only continue immediately if we were loading the webapp, other operations are not allowed!
32796>>>>>                        Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
32797>>>>>>
32797>>>>>                        Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
32798>>>>>                    End
32798>>>>>>
32798>>>>>                End
32798>>>>>>
32798>>>>>            End
32798>>>>>>
32798>>>>>        End
32798>>>>>>
32798>>>>>        Else Begin
32799>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
32800>>>>>>
32800>>>>>        End
32800>>>>>>
32800>>>>>        
32800>>>>>        Function_Return bResult
32801>>>>>    End_Function
32802>>>>>    
32802>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
32804>>>>>        String sSessionKey sUserPassword
32804>>>>>        Handle hoSessionDD hoUserDD
32804>>>>>        Boolean bMatch  
32804>>>>>        
32804>>>>>        Get phoSessionDD to hoSessionDD
32805>>>>>        Get phoUserDD to hoUserDD
32806>>>>>        Integer iErr eLoginMode
32806>>>>>        
32806>>>>>        // Refind session record
32806>>>>>        Get psSessionKey to sSessionKey
32807>>>>>        Send Clear of hoSessionDD
32808>>>>>        Move sSessionKey to WebAppSession.SessionKey
32809>>>>>        Send Find of hoSessionDD EQ Index.1
32810>>>>>        
32810>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
32812>>>>>            Get peLoginMode to eLoginMode
32813>>>>>            
32813>>>>>            //  Find the user
32813>>>>>            Move sLoginName to WebAppUser.LoginName
32814>>>>>            Send Find of hoUserDD EQ Index.1
32815>>>>>            
32815>>>>>            // Check username and password
32815>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
32817>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
32818>>>>>                Get ComparePasswords (Trim(sUserPassword)) (Trim(sPassword)) to bMatch
32819>>>>>                
32819>>>>>                If (bMatch) Begin
32821>>>>>                    // Store the login
32821>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
32822>>>>>                    Get Request_Validate of hoSessionDD to iErr
32823>>>>>                    If (iErr) Begin
32825>>>>>                        // this should not happen. If it does its a programming error
32825>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
32826>>>>>>
32826>>>>>                        Function_Return False
32827>>>>>                    End
32827>>>>>>
32827>>>>>                    
32827>>>>>                    Send Request_Save of hoSessionDD
32828>>>>>                    
32828>>>>>                    // Update session properties
32828>>>>>                    Send UpdateSessionProperties False
32829>>>>>                    Send NotifyChangeRights
32830>>>>>                    Function_Return True
32831>>>>>                End
32831>>>>>>
32831>>>>>                Else Begin
32832>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
32832>>>>>                    Send Clear of hoUserDD
32833>>>>>                End
32833>>>>>>
32833>>>>>            End
32833>>>>>>
32833>>>>>        End
32833>>>>>>
32833>>>>>          
32833>>>>>        Function_Return False
32834>>>>>    End_Function
32835>>>>>    
32835>>>>>    Function IsLoggedIn Returns Boolean
32837>>>>>        String sLoginName
32837>>>>>        Boolean bLogWebSession bLoggedIn
32837>>>>>        
32837>>>>>        Get pbLogWebSession to bLogWebSession
32838>>>>>        If not bLogWebSession Begin
32840>>>>>            Forward Get IsLoggedIn to bLoggedIn
32842>>>>>            Function_Return bLoggedIn
32843>>>>>        End
32843>>>>>>
32843>>>>>        
32843>>>>>        Get psLoginName to sLoginName
32844>>>>>        
32844>>>>>        Function_Return (sLoginName <> "")
32845>>>>>    End_Function
32846>>>>>    
32846>>>>>    
32846>>>>>    //
32846>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
32846>>>>>    // update properties based on the session and user data. Augment this function to update 
32846>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
32846>>>>>    // the right records when this procedure is called.
32846>>>>>    //
32846>>>>>    // Params:
32846>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
32846>>>>>    //
32846>>>>>    Procedure UpdateSessionProperties Boolean bClear
32848>>>>>        Handle hoUserDD
32848>>>>>        
32848>>>>>        Get phoUserDD to hoUserDD
32849>>>>>        
32849>>>>>        //  Update user properties
32849>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
32851>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
32852>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
32853>>>>>            Set piUserRights to WebAppUser.Rights
32854>>>>>            
32854>>>>>            Send OnSessionPropertiesSet 
32855>>>>>        End
32855>>>>>>
32855>>>>>        Else Begin
32856>>>>>            Set psUsername to ""
32857>>>>>            Set psLoginName to ""
32858>>>>>            Set piUserRights to 0
32859>>>>>            
32859>>>>>            Send OnSessionPropertiesClear
32860>>>>>        End
32860>>>>>>
32860>>>>>    End_Procedure
32861>>>>>    
32861>>>>>    //
32861>>>>>    // This function is called to perform the password comparison. It gets the entered password and
32861>>>>>    // the password value of the user table as parameters. The WebAppUser buffer will contain the
32861>>>>>    // right record. This function can be augmented to implement security features like storing the
32861>>>>>    // password as a hashed value.
32861>>>>>    //
32861>>>>>    // Params:
32861>>>>>    //      sUserPassword       Value of the WebAppUser.Password field.
32861>>>>>    //      sEnteredPassword    Value entered on the login screen during login.
32861>>>>>    //
32861>>>>>    Function ComparePasswords String sUserPassword String sEnteredPassword Returns Boolean
32863>>>>>        Function_Return (sUserPassword = sEnteredPassword)
32864>>>>>    End_Function
32865>>>>>    
32865>>>>>    Procedure OnSessionPropertiesSet
32867>>>>>        //  Empty event stub
32867>>>>>    End_Procedure
32868>>>>>    
32868>>>>>    Procedure OnSessionPropertiesClear
32870>>>>>        //  Empty event stub
32870>>>>>    End_Procedure
32871>>>>>    
32871>>>>>    Procedure EndSession
32873>>>>>        Integer iErr
32873>>>>>        Boolean bLogWebSession
32873>>>>>        Handle hoSessionDD       
32873>>>>>        
32873>>>>>        Get phoSessionDD to hoSessionDD
32874>>>>>        Get pbLogWebSession to bLogWebSession
32875>>>>>        If not bLogWebSession Begin
32877>>>>>            Forward Send EndSession
32879>>>>>            Procedure_Return
32880>>>>>        End
32880>>>>>>
32880>>>>>            
32880>>>>>        //  Check if session exists
32880>>>>>        Send Clear of hoSessionDD
32881>>>>>        Get psSessionKey to WebAppSession.SessionKey
32882>>>>>        
32882>>>>>        Send Find of hoSessionDD EQ Index.1
32883>>>>>        If (Found) Begin
32885>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
32886>>>>>            Get Request_Validate of hoSessionDD to iErr
32887>>>>>            If (iErr) Begin
32889>>>>>                // this should not happen. If it does its a programming error
32889>>>>>                Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
32890>>>>>>
32890>>>>>                Procedure_Return
32891>>>>>            End
32891>>>>>>
32891>>>>>            Send Request_Save of hoSessionDD
32892>>>>>        End
32892>>>>>>
32892>>>>>    End_Procedure
32893>>>>>
32893>>>>>End_Class
32894>>>>>
32894>>>
32894>>>Object oSessionManager is a cWebSessionManagerStandard
32896>>>End_Object
32897>>>
32897>>>
32897>    Use Login.wo
Including file: Login.wo    (E:\repositories\JenkinsDemo\AppSrc\Login.wo)
32897>>>Use cWebView.pkg
32897>>>Use cWebForm.pkg
32897>>>Use cWebButton.pkg
32897>>>Use cWebPanel.pkg
32897>>>Use cWebLabel.pkg
32897>>>Use cWebSpacer.pkg
32897>>>Use cWebImage.pkg
32897>>>
32897>>>Object oLogin is a cWebView
32899>>>    Set piMinWidth to 250
32900>>>    Set piMaxWidth to 420
32901>>>    Set pbLoginModeEnforced to False
32902>>>    Set piColumnCount to 12
32903>>>    Set psCSSClass to "LoginView"
32904>>>    Set pbServerOnSubmit to True
32905>>>    
32905>>>    Set psStateViewName to "Login"
32906>>>    Set pbStateReplace to True  // Always replace the state so the login never becomes its own history item
32907>>>    
32907>>>    Property String psPrevStateHash ""  // Remember the state hash that the user navigated too so we can redirect after login
32911>>>    
32911>>>    Delegate Set phoLoginView to Self
32913>>>    
32913>>>    Object oTopSpacer is a cWebSpacer
32915>>>        Set pbFillHeight to True
32916>>>        Set piColumnSpan to 12
32917>>>    End_Object
32918>>>    
32918>>>    Object oWarning is a cWebLabel
32920>>>        Set pbVisible to False
32921>>>        Set psCaption to "Invalid User ID or password. \n\rHint: 'Guest' & 'guest'."
32922>>>        Set peAlign to alignCenter
32923>>>        Set piColumnSpan to 12
32924>>>        Set psCSSClass to "LoginWarning"
32925>>>    End_Object
32926>>>    
32926>>>    Object oLogo is a cWebImage
32928>>>        Set piColumnSpan to 10
32929>>>        Set psUrl to "images/DF_Logo_Retina.png"
32930>>>        Set pePosition to wiFit
32931>>>        Set piColumnIndex to 1
32932>>>        Set piHeight to 160
32933>>>        
32933>>>        WebSetResponsive piHeight rmMobile to 100  // Best for small smart phones
32934>>>    End_Object
32935>>>    
32935>>>    Object oLoginName is a cWebForm
32937>>>        Set psLabel to "User ID:"
32938>>>        Set peLabelPosition to lpTop
32939>>>        Set piMaxLength to 20
32940>>>        Set piColumnIndex to 1
32941>>>        Set pbShowLabel to False
32942>>>        Set psPlaceHolder to "loginname"
32943>>>        Set piColumnSpan to 10
32944>>>        Set psAutoComplete to "username"
32945>>>    End_Object
32946>>>    
32946>>>    Object oPassword is a cWebForm
32948>>>        Set psLabel to "Password:"
32949>>>        Set pbPassword to True
32950>>>        Set peLabelAlign to alignLeft
32951>>>        Set piMaxLength to 20
32952>>>        Set peLabelPosition to lpTop
32953>>>        Set pbShowLabel to False
32954>>>        Set psPlaceHolder to "password"
32955>>>        Set piColumnSpan to 10
32956>>>        Set piColumnIndex to 1
32957>>>        Set psAutoComplete to "current-password"
32958>>>    End_Object
32959>>>    
32959>>>    Object oWebSpacer1 is a cWebSpacer
32961>>>        Set piColumnSpan to 12
32962>>>        Set piHeight to 10
32963>>>    End_Object
32964>>>    
32964>>>    Object oLoginButton is a cWebButton
32966>>>        Set pbShowLabel to False
32967>>>        Set psCaption to "sign in"
32968>>>        Set pbServerOnClick to True
32969>>>        Set piColumnSpan to 10
32970>>>        Set piColumnIndex to 1
32971>>>        
32971>>>        Procedure OnClick
32974>>>            Send DoLogin
32975>>>        End_Procedure
32976>>>    End_Object
32977>>>    
32977>>>    Object oBottomSpacer is a cWebSpacer
32979>>>        Set pbFillHeight to True
32980>>>        Set piColumnSpan to 12
32981>>>    End_Object
32982>>>    
32982>>>    Procedure DoLogin
32985>>>        String sLoginName sPassword sPrevStateHash
32985>>>        Boolean bResult
32985>>>        
32985>>>        WebGet psValue of oLoginName to sLoginName
32988>>>        WebGet psValue of oPassword to sPassword
32991>>>        
32991>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
32992>>>        
32992>>>        If (bResult) Begin
32994>>>            Send Hide of oLogin
32995>>>            Send ShowHeader of ghoWebApp
32996>>>            WebSet psCSSClass of ghoWebApp to ""
32997>>>            
32997>>>            WebGet psPrevStateHash to sPrevStateHash
33000>>>            Send NavigateToStateHash of ghoWebApp sPrevStateHash True
33001>>>            
33001>>>            // clear the login values. we don't want to return the login id & password as synchronized properties....
33001>>>            WebSet psValue of oLoginName to ""
33002>>>            WebSet psValue of oPassword  to ""
33003>>>            WebSet pbVisible of oWarning to False
33004>>>        End
33004>>>>
33004>>>        Else Begin
33005>>>            WebSet pbVisible of oWarning to True
33006>>>        End
33006>>>>
33006>>>    End_Procedure
33007>>>    
33007>>>    Procedure OnSubmit
33010>>>        Send DoLogin
33011>>>    End_Procedure
33012>>>    
33012>>>    Procedure OnLoad
33015>>>        String sPrevStateHash sView
33015>>>        
33015>>>        Forward Send OnLoad
33017>>>        
33017>>>        //  Store the current state so we can go back to that later (only if it points to a different view)
33017>>>        Get StateHash of ghoWebApp to sPrevStateHash
33018>>>        Send ParseViewStateHash sPrevStateHash (&sView)
33019>>>        If (Lowercase(sView) <> Lowercase(psStateViewName(Self))) Begin
33021>>>            WebSet psPrevStateHash to sPrevStateHash
33022>>>        End
33022>>>>
33022>>>        
33022>>>    End_Procedure
33023>>>    
33023>>>    Procedure OnBeforeShow
33026>>>        //  Hide header & apply nice background style
33026>>>        Send HideHeader to ghoWebApp
33027>>>        WebSet psCSSClass of ghoWebApp to "LoginBackground"
33028>>>    End_Procedure
33029>>>    
33029>>>End_Object
33030>>>
33030>>>
33030>>>
33030>>>
33030>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (E:\repositories\JenkinsDemo\AppSrc\WebResourceManager.wo)
33030>>>Use cWebResourceManager.pkg
33030>>>
33030>>>Object oWebResourceManager is a cWebResourceManager
33032>>>End_Object
33033>    
33033>    Use Dashboard.wo
Including file: Dashboard.wo    (E:\repositories\JenkinsDemo\AppSrc\Dashboard.wo)
33033>>>Use cWebView.pkg
33033>>>Use cWebPanel.pkg
33033>>>Use cWebForm.pkg
33033>>>Use cWebButton.pkg
33033>>>Use cWebGroup.pkg
33033>>>Use cWebSpacer.pkg
33033>>>Use cWebHtmlBox.pkg
33033>>>Use cWebMenuGroup.pkg
33033>>>Use cWebMenuItem.pkg
33033>>>Use cWebLabel.pkg
33033>>>Use cWebList.pkg
33033>>>Use cWebColumn.pkg
33033>>>
33033>>>Object oDashboard is a cWebView
33035>>>
33035>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
33035>>>    // Add a DDO Structure 
33035>>>    //
33035>>>    // There is no need to synchronize a DD structure on the client so we do
33035>>>    // not set the Server property or send ADDOStructure. We will simply use
33035>>>    // DDO's to mine data and generate HTML for our cWebHTMLBox objects.
33035>>>    // It is the HTML in these objects that is sent to the client each time 
33035>>>    // this page is shown.
33035>>>    //
33035>>>    // Also, it is important for the drill-down Navigation interface that we
33035>>>    // do not set the Server property to some DDO because this will affect 
33035>>>    // constraints in the next view that we navigate to.
33035>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
33035>>>
33035>>>    Set piMaxWidth to 1024
33036>>>    
33036>>>    Set psCaption to "Dashboard"
33037>>>    Set peViewType to vtUndefined
33038>>>    Set pbShowCaption to False
33039>>>    Set psCSSClass to "Dashboard"
33040>>>    
33040>>>    Object oWebMainPanel is a cWebPanel
33042>>>        Set piColumnCount to 24
33043>>>        
33043>>>        // - - - - - - - - - - - - - - -
33043>>>        // Main Panel's Responsive Rules
33043>>>        // - - - - - - - - - - - - - - -
33043>>>        WebSetResponsive piColumnCount rmMobile to 1
33044>>>        WebSetResponsive piColumnCount rmTabletPortrait to 16
33045>>>    
33045>>>        Object oTiles_grp is a cWebGroup
33047>>>            Set piColumnSpan to 8
33048>>>            Set pbShowBorder to False
33049>>>            Set pbShowCaption to False
33050>>>            Set piColumnCount to 12
33051>>>            
33051>>>            Set psCSSClass to "TilesGroup"
33052>>>    
33052>>>            Object oWelcomeTile is a cWebHtmlBox
33054>>>                Set piColumnSpan to 6
33055>>>                Set psCSSClass to "Tile Light"
33056>>>                Set psHtml to '<div Class="WebCon_Sizer"><div class="Tile_Title">Welcome</div><div Class="Tile_Subtitle">--</div></div>'
33057>>>    
33057>>>                Procedure OnLoad
33060>>>                    Send UpdateHTML ('<div class="WebCon_Sizer">' + ;                                     '<div class="Tile_Title">Welcome</div>' +;                                     '<div class="Tile_Subtitle">' - htmlEncode(psUserName(ghoWebSessionManager)) - '</div>' +;                                     '</div>')
33061>>>                End_Procedure
33062>>>                
33062>>>            End_Object
33063>>>    
33063>>>            Object oTile2 is a cWebHtmlBox
33065>>>                Set pbServerOnClick to True
33066>>>                Set piColumnSpan to 6
33067>>>                Set piColumnIndex to 6
33068>>>                Set psCSSClass to "Tile LightAlternate"
33069>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 2</div><div class="Tile_Subtitle"></div></div>'
33070>>>                                
33070>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
33070>>>                
33070>>>                Procedure OnClick String sId String sParam
33073>>>                    Send NavigatePath
33074>>>                End_Procedure
33075>>>                
33075>>>            End_Object
33076>>>    
33076>>>            Object oTile3 is a cWebHtmlBox
33078>>>                Set pbServerOnClick to True
33079>>>                Set piColumnSpan to 6
33080>>>                Set psCSSClass to "Tile Dark"
33081>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 3</div><div class="Tile_Subtitle"></div></div>'
33082>>>    
33082>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
33082>>>                
33082>>>                Procedure OnClick String sId String sParam
33085>>>                    Send NavigatePath
33086>>>                End_Procedure
33087>>>                
33087>>>            End_Object
33088>>>    
33088>>>            Object oTile4 is a cWebHtmlBox
33090>>>                Set pbServerOnClick to True
33091>>>                Set piColumnSpan to 6
33092>>>                Set piColumnIndex to 6
33093>>>                Set psCSSClass to "Tile DarkAlternate"
33094>>>                Set psHtml to '<div class="WebCon_Sizer" data-ServerOnClick="openview"><div Class="Tile_Title">Tile 4</div><div class="Tile_Subtitle"></div></div>'
33095>>>            
33095>>>                // WebRegisterPath ntNavigateForwardCustom oYourViewName
33095>>>                
33095>>>                Procedure OnClick String sId String sParam
33098>>>                    Send NavigatePath
33099>>>                End_Procedure
33100>>>                
33100>>>            End_Object
33101>>>        End_Object
33102>>>    
33102>>>    End_Object
33103>>>    
33103>>>    Procedure OnBeforeShow
33106>>>        // Each time this view is shown we will update the appropriate information.
33106>>>    End_Procedure
33107>>>
33107>>>End_Object
33108>    Set phoDefaultView to oDashboard
33109>
33109>End_Object
33110>
33110>Send StartWebApp of oWebApp
33111>
Summary
Memory Available: 8713801728
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 22261
Total Resources: 0
Total Commands : 33110
Total Windows  : 0
Total Pages    : 0
Static Data    : 423377
Message area   : 225749
Total Blocks   : 15074
